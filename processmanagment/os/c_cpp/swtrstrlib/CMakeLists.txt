cmake_minimum_required(VERSION 3.20)
project(swtrstrlib C)
if ("${CMAKE_BUILD_TYPE}" STREQUAL "")
     set(CMAKE_BUILD_TYPE "Release" "BuildType")
endif ("${CMAKE_BUILD_TYPE}" STREQUAL "")

message("---- CMAKE_INSTALL_LOCALSTATEDIR ${CMAKE_INSTALL_LOCALSTATEDIR}")
message("---- CMAKE_INSTALL_SYSCONFDIR  ${CMAKE_INSTALL_SYSCONFDIR}")
message("---- CMAKE_LIBRARY_PATH  ${CMAKE_LIBRARY_PATH}")
message("---- CMAKE_SYSTEM ${CMAKE_SYSTEM}")
message("---- CMAKE_SYSTEM_NAME ${CMAKE_SYSTEM_NAME}")
message("---- CMAKE_HOST_SYSTEM ${CMAKE_HOST_SYSTEM}")
message("---- CMAKE_HOST_SYSTEM_NAME ${CMAKE_HOST_SYSTEM_NAME}")
message("---- CMAKE_HOST_UNIX ${CMAKE_HOST_UNIX}")

if (EXISTS "/etc/os-release")
  file(STRINGS "/etc/os-release" OS_RELEASE_INFO REGEX "^ID=*")
  message("---- OS_RELEASE_INFO ${OS_RELEASE_INFO}")
  if (OS_RELEASE_INFO MATCHES "ID=")
    string(STRIP "${OS_RELEASE_INFO}"  OS_RELEASE_INFO)
    string(SUBSTRING "${OS_RELEASE_INFO}" 3 -1 OS_NAME)
  endif(OS_RELEASE_INFO MATCHES "ID=")
else (EXISTS "/etc/os-release")
    set(OS_NAME ${CMAKE_HOST_SYSTEM_NAME})
endif(EXISTS "/etc/os-release")
message("---- OS_NAME '${OS_NAME}'")

message("-- ${CMAKE_BUILD_TYPE}")
set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set (DOXYGEN_TEMPLATES childmgt)
set (DOCDIR_ROOT ${CMAKE_BINARY_DIR})
set (BASE_DOCDIR doc)

if (DEFINED SWTRLIB_BUILD_LIBS)
  message("-- CMDLINE OVERRIDE BUILDING LIBS: ${SWTRLIB_BUILD_LIBS}")
else (DEFINED SWTRLIB_BUILD_LIBS)
  set (SWTRLIB_BUILD_LIBS "swtrstrlib")
endif (DEFINED SWTRLIB_BUILD_LIBS)

message("-- Building librarys ${SWTRLIB_BUILD_LIBS}")

if (CMAKE_BUILD_TYPE MATCHES Debug)
    add_compile_options(-std=c99 ${CMAKE_C_FLAGS_DEBUG} -Wall)
elseif (CMAKE_BUILD_TYPE MATCHES Release)
   add_compile_options(-std=c99 -O3)
elseif (CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)
    add_compile_options(-std=c99 -O2 ${CMAKE_C_FLAGS_DEBUG})
endif(CMAKE_BUILD_TYPE MATCHES Debug)

set (libsrc_string src_c/lremove_char.c
     src_c/rremove_char.c
     src_c/remove_char.c
    )
set (SWTRSTRLIB_LIB_VERSION_MAJOR 0)
set (SWTRSTRLIB_LIB_VERSION_MINOR 9)
set (SWTRSTRLIB_LIB_VERSION_SUBVERSION 5)
set (SWTRSTRLIB_LIB_VERSION 0.9.5)

if (DEFINED SWTRLIB_LIB_INSTALL_ROOT)
  message("-- CMDLINE OVERRIDE INSTALL ROOT: ${SWTRLIB_LIB_INSTALL_ROOT}")
else (DEFINED SWTRLIB_LIB_INSTALL_ROOT)
  set (SWTRLIB_LIB_INSTALL_ROOT ${CMAKE_BINARY_DIR})
endif (DEFINED SWTRLIB_LIB_INSTALL_ROOT )
message("-- INSTALL ROOT: ${SWTRLIB_LIB_INSTALL_ROOT}")

if (${SWTRLIB_BUILD_LIBS} MATCHES "swtrstrlib")

  if (OS_NAME MATCHES debian)
    set(CMAKE_INSTALL_PREFIX "usr")
  elseif (OS_NAME MATCHES fedora)
    set(CMAKE_INSTALL_PREFIX "opt")
  else (OS_NAME MATCHES debian)
    set(CMAKE_INSTALL_PREFIX "opt")
  endif (OS_NAME MATCHES debian)
  message("-- Adding library swtrstrlib to build.")
  add_library(swtrstrlib SHARED ${libsrc_string})
  add_library(swtrstrlib_static STATIC ${libsrc_string})
  set_target_properties(swtrstrlib swtrstrlib_static PROPERTIES VERSION ${SWTRSTRLIB_LIB_VERSION} SOVERSION ${SWTRSTRLIB_LIB_VERSION})
  message("-- Adding library swtrstrlib to install.")
  install(TARGETS swtrstrlib swtrstrlib_static
		LIBRARY DESTINATION lib
		ARCHIVE DESTINATION lib
	)
	install(FILES src_c/swtrstrlib.h DESTINATION include)
  if (OS_NAME MATCHES debian)
    message("-- Configure to build a ${OS_NAME} package.")
    set(CPACK_GENERATOR "DEB")
    set(CPACK_PACKAGE_VERSION_MAJOR ${SWTRSTRLIB_LIB_VERSION_MAJOR})
    set(CPACK_PACKAGE_VERSION_MINOR ${SWTRSTRLIB_LIB_VERSION_MINOR})
    set(CPACK_PACKAGE_VERSION_PATCH ${SWTRSTRLIB_LIB_VERSION_SUBVERSION})
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Eric Bruno <eric@ebruno.org>")
    set(CPACK_PACKAGE_CONTACT "Eric Bruno <eric@ebruno.org>")
    set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "SoftwareTrace String library")
    set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/Description.txt") # Create this file
    message("-- CPACK_DEBIAN_PACKAGE_MAINTAINER: ${CPACK_DEBIAN_PACKAGE_MAINTAINER}")
    include (CPack)
  endif (OS_NAME MATCHES debian)

endif (${SWTRLIB_BUILD_LIBS} MATCHES "swtrstrlib")
