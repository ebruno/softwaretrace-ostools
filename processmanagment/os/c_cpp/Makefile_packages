RELEASE_INFO_FILE = /etc/os-release
# /etc/os-release has the following information that we need.
# NAME and version 
# For example:
# NAME="Ubuntu"
# VERSION="16.04.4 LTS (Xenial Xerus)"
# or
# NAME="CentOS Linux"
# VERSION="7 (Core)"

ifeq ("$(wildcard ${RELEASE_INFO_FILE})","")
  ${error Unable to locate ${RELEASE_INFO_FILE})
else
  include ${RELEASE_INFO_FILE}
endif


TARFILE_NAME   = softwaretrace-ostools-src


SPEC_DIR = SPECS

SPEC_TEMPLATE_DIR = spec_template


ifeq ($(NAME),"CentOS Linux")
     RPMBUILD_BASE  = rpmbuild
     RPMBUILD_DIRS  = BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
     RPMBUILD_SOURCE_DIR = ${HOME}/${RPMBUILD_BASE}/SOURCES
     RPM_VERBOSE = 
#    RPM_VERBOSE = --vv

ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_rpm.mk)","")
else
 include ${CURDIR}/make_swtrstrlib_rpm.mk
endif

ifeq ("$(wildcard ${CURDIR}/make_swtrprocmgtutils_rpm.mk)","")
else
 include ${CURDIR}/make_swtrprocmgtutils_rpm.mk
endif

else ifeq ($(NAME),"Red Hat Enterprise Linux Server")
     RPMBUILD_BASE  = rpmbuild
     RPMBUILD_DIRS  = BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
     RPMBUILD_SOURCE_DIR = ${HOME}/${RPMBUILD_BASE}/SOURCES
     RPM_VERBOSE = 
#    RPM_VERBOSE = --vv

ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_rpm.mk)","")
else
 include ${CURDIR}/make_swtrstrlib_rpm.mk
endif

ifeq ("$(wildcard ${CURDIR}/make_swtrprocmgtutils_rpm.mk)","")
else
 include ${CURDIR}/make_swtrprocmgtutils_rpm.mk
endif

else ifeq ($(NAME),"Ubuntu")
     DEBBUILD_BASE  = debbuild
     DEBBUILD_DIRS  = SOURCES
     DEBBUILD_SOURCE_DIR = ${HOME}/${DEBBUILD_BASE}/SOURCES

ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_ubuntu_deb.mk)","")
else
 include ${CURDIR}/make_swtrstrlib_ubuntu_deb.mk
endif
else
   $(error $(NAME) is not a supported system)
endif

TEMP_DIRS = ${SPEC_DIR}

.PHONY:	create_rpmdirs


all:

ifeq ($(NAME),"CentOS Linux")

create_rpmdirs:
	@echo "Creating RPM BUILD DIRS at ${HOME}/${RPMBUILD_BASE}";
	@$(foreach subdir, ${RPMBUILD_DIRS}, if ! test -d ${HOME}/${RPMBUILD_BASE}/${subdir}; then mkdir -p ${HOME}/${RPMBUILD_BASE}/${subdir};fi;)

clean_rpmdirs:
	@echo "Clean RPM BUILD DIRS at ${HOME}/${RPMBUILD_BASE}";
	@$(foreach subdir, ${RPMBUILD_DIRS}, if test -d ${HOME}/${RPMBUILD_BASE}/${subdir}; then rm -r -f  ${HOME}/${RPMBUILD_BASE}/${subdir}/*;fi;)

delete_rpmdirs:
	@echo "Deleting RPM BUILD DIRS at ${HOME}/${RPMBUILD_BASE}";
	@$(foreach subdir, ${RPMBUILD_DIRS}, if test -d ${HOME}/${RPMBUILD_BASE} then rm -r -f ${HOME}/${RPMBUILD_BASE};fi;)

else ifeq ($(NAME),"Ubuntu")
create_debdirs:
	@echo "Creating DEB BUILD DIRS at ${HOME}/${DEBBUILD_BASE}";
	@$(foreach subdir, ${DEBBUILD_DIRS}, if ! test -d ${HOME}/${DEBBUILD_BASE}/${subdir}; then mkdir -p ${HOME}/${DEBBUILD_BASE}/${subdir};fi;)

clean_debdirs:
	@echo "Clean DEB BUILD DIRS at ${HOME}/${DEBBUILD_BASE}";
	@$(foreach subdir, ${DEBBUILD_DIRS}, if test -d ${HOME}/${DEBBUILD_BASE}/${subdir}; then rm -r -f  ${HOME}/${DEBBUILD_BASE}/${subdir}/*;fi;)

delete_debdirs:
	@echo "Deleting DEB BUILD DIRS at ${HOME}/${DEBBUILD_BASE}";
	@$(foreach subdir, ${DEBBUILD_DIRS}, if test -d ${HOME}/${DEBBUILD_BASE} then rm -r -f ${HOME}/${DEBBUILD_BASE};fi;)

endif
clean:
	@echo "Cleaning"
	$(foreach item, ${TEMP_DIRS}, rm -r -f ${item};)

dist_clean: clean