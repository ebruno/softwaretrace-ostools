RELEASE_INFO_FILE = /etc/os-release
# /etc/os-release has the following information that we need.
# NAME and version 
# For example:
# NAME="Ubuntu"
# VERSION="16.04.4 LTS (Xenial Xerus)"
# or
# NAME="CentOS Linux"
# VERSION="7 (Core)"

KERNEL_NAME  = $(shell uname -s)

FEDORA_NAME   = Fedora

CENTOS_NAME   = "CentOS Linux"

RHEL_NAME = "Red Hat Enterprise Linux Server"

ARCHLINUX_NAME = "Arch Linux"

FREEBSD_NAME   = FreeBSD

ifeq ($(KERNEL_NAME),Linux)
ifeq ("$(wildcard ${RELEASE_INFO_FILE})","")
  $(error Unable to locate ${RELEASE_INFO_FILE})
else
  include ${RELEASE_INFO_FILE}
endif
else
NAME  = ${KERNEL_NAME}
endif


TARFILE_NAME   = softwaretrace-ostools-src


SPEC_DIR = SPECS

SPEC_TEMPLATE_DIR = spec_template

BUILDING_RPMS = Yes
$(info Checking to see if OS/Distro "$(NAME)" is supported)

ifeq ($(NAME),$(CENTOS_NAME))
     RPMBUILD_BASE  = rpmbuild
     RPMBUILD_DIRS  = BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
     RPMBUILD_SOURCE_DIR = ${HOME}/${RPMBUILD_BASE}/SOURCES
     RPM_VERBOSE = 
#    RPM_VERBOSE = --vv
     BUILDING_RPMS = Yes

    ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_rpm.mk)","")
    else 
       include ${CURDIR}/make_swtrstrlib_rpm.mk
    endif

    ifeq ("$(wildcard ${CURDIR}/make_swtrprocmgtutils_rpm.mk)","")
    else
      include ${CURDIR}/make_swtrprocmgtutils_rpm.mk
    endif

else ifeq ($(NAME),$(RHEL_NAME))
     RPMBUILD_BASE  = rpmbuild
     RPMBUILD_DIRS  = BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
     RPMBUILD_SOURCE_DIR = ${HOME}/${RPMBUILD_BASE}/SOURCES
     RPM_VERBOSE = 
#    RPM_VERBOSE = --vv
     BUILDING_RPMS = Yes

     ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_rpm.mk)","")
     else
       include ${CURDIR}/make_swtrstrlib_rpm.mk
     endif

     ifeq ("$(wildcard ${CURDIR}/make_swtrprocmgtutils_rpm.mk)","")
     else
      include ${CURDIR}/make_swtrprocmgtutils_rpm.mk
     endif
else ifeq ($(NAME),Fedora)
       RPMBUILD_BASE  = rpmbuild
       RPMBUILD_DIRS  = BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
       RPMBUILD_SOURCE_DIR = ${HOME}/${RPMBUILD_BASE}/SOURCES
       RPM_VERBOSE = 
#      RPM_VERBOSE = --vv
       BUILDING_RPMS = Yes

       ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_rpm.mk)","")
       else
         include ${CURDIR}/make_swtrstrlib_rpm.mk
       endif

       ifeq ("$(wildcard ${CURDIR}/make_swtrprocmgtutils_rpm.mk)","")
       else
         include ${CURDIR}/make_swtrprocmgtutils_rpm.mk
       endif
else ifeq ($(NAME),Ubuntu)
       DEBBUILD_BASE  = debbuild
       DEBBUILD_DIRS  = SOURCES
       DEBBUILD_SOURCE_DIR = ${HOME}/${DEBBUILD_BASE}/SOURCES
       BUILDING_RPMS = No 
       ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_ubuntu_deb.mk)","")
       else
         include ${CURDIR}/make_swtrstrlib_ubuntu_deb.mk
       endif
else ifeq ($(NAME),$(ARCHLINUX_NAME))
       PACMANBUILD_BASE = ${CURDIR}/ARCHLINUXBUILD
       ARCLINUX_SOURCE_DIR = ${PACMANBUILD_BASE}
       ARCLINUX_PACKAGE_DIR = packages
       ifeq ("$(wildcard ${CURDIR}/make_swtrstrlib_archlinux.mk)","")
       else
         include ${CURDIR}/make_swtrstrlib_archlinux.mk
       endif

       ifeq ("$(wildcard ${CURDIR}/make_swtrprocmgtutils_archlinux.mk)","")
          $(info make_swtrprocmgtutils_archlinux.mk not found, skipping.)
       else
          $(info Including make_swtrprocmgtutils_archlinux.mk)
         include ${CURDIR}/make_swtrprocmgtutils_archlinux.mk
       endif
else
   $(error "$(NAME)" is not a supported operating system)
endif

$(info OS/Distro "$(NAME)" is supported, continuing.)

TEMP_DIRS = ${SPEC_DIR} ${CURDIR}/src ${PACMANBUILD_BASE}

.PHONY:	create_rpmdirs clean


all:

ifeq ($(BUILDING_RPMS),Yes)
create_rpmdirs:
	@echo "Creating RPM BUILD DIRS at ${HOME}/${RPMBUILD_BASE}";
	@$(foreach subdir, ${RPMBUILD_DIRS}, if ! test -d ${HOME}/${RPMBUILD_BASE}/${subdir}; then mkdir -p ${HOME}/${RPMBUILD_BASE}/${subdir};fi;)

clean_rpmdirs:
	@echo "Clean RPM BUILD DIRS at ${HOME}/${RPMBUILD_BASE}";
	@$(foreach subdir, ${RPMBUILD_DIRS}, if test -d ${HOME}/${RPMBUILD_BASE}/${subdir}; then rm -r -f  ${HOME}/${RPMBUILD_BASE}/${subdir}/*;fi;)

delete_rpmdirs:
	@echo "Deleting RPM BUILD DIRS at ${HOME}/${RPMBUILD_BASE}";
	@$(foreach subdir, ${RPMBUILD_DIRS}, if test -d ${HOME}/${RPMBUILD_BASE} then rm -r -f ${HOME}/${RPMBUILD_BASE};fi;)

else
create_debdirs:
	@echo "Creating DEB BUILD DIRS at ${HOME}/${DEBBUILD_BASE}";
	@$(foreach subdir, ${DEBBUILD_DIRS}, if ! test -d ${HOME}/${DEBBUILD_BASE}/${subdir}; then mkdir -p ${HOME}/${DEBBUILD_BASE}/${subdir};fi;)

clean_debdirs:
	@echo "Clean DEB BUILD DIRS at ${HOME}/${DEBBUILD_BASE}";
	@$(foreach subdir, ${DEBBUILD_DIRS}, if test -d ${HOME}/${DEBBUILD_BASE}/${subdir}; then rm -r -f  ${HOME}/${DEBBUILD_BASE}/${subdir}/*;fi;)

delete_debdirs:
	@echo "Deleting DEB BUILD DIRS at ${HOME}/${DEBBUILD_BASE}";
	@$(foreach subdir, ${DEBBUILD_DIRS}, if test -d ${HOME}/${DEBBUILD_BASE} then rm -r -f ${HOME}/${DEBBUILD_BASE};fi;)

endif
clean:
	@echo "Cleaning"
	@$(foreach item, ${TEMP_DIRS}, rm -r -f ${item};)
dist_clean: clean