archlinux:
  stage: publish
  parallel:
    matrix:
      - RUNNER_TAG: [archlinuxvm]
  before_script:
    - |
      ls -lR packages;
  script:
    - |
      . /etc/os-release;
      machine="$(uname -m)";
      ARTIFACTDIR="${PWD}/packages/${ID}linux/${machine}";
      PACKAGE_EXT="*.pkg.tar.zst"
      echo "NAS_REPO_IP=${NAS_REPO_IP}";
      sudo ./move_linux_packages.sh "${ARTIFACTDIR}" "${PACKAGE_EXT}" "${ID}" "${NAS_REPO_ROOT_PATH}" "${REPO_ROOT_PATH}" "${REPO_NAME}" "${machine}" 
  needs: ["build_archlinux_container"]
  dependencies:
    - build_archlinux_container
  tags:
    - $RUNNER_TAG
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - changes:
         - .gitlab-ci.yml
         - .gitlab-ci/*.yml
         - ./processmanagement/os/c_cpp/**/Makefile
         - ./processmanagement/os/c_cpp/**/*.mk
         - ./processmanagement/os/c_cpp/**/*.h
         - ./processmanagement/os/c_cpp/**/*.c

redhat:
  stage: publish
  parallel:
    matrix:
      - RUNNER_TAG: [redhat]
  before_script:
    - |
      ls -lR packages;
  script:
    - |
      . /etc/os-release;
      machine="$(uname -m)";
      ARTIFACTDIR="${PWD}/packages/${ID}/${machine}";
      PACKAGE_EXT="*.rpm"
      ls -lR "${ARTIFACTDIR}";
      #find "${ARTIFACTDIR}" -name "${PACKAGE_EXT}" -printf "[INFO] Package:%f\n" -exec basename {}; pacman -Ql {} \;
  needs: ["build_deb_or_rpm_container"]
  dependencies:
    - build_deb_or_rpm_container
  tags:
    - $RUNNER_TAG
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - changes:
         - .gitlab-ci.yml
         - .gitlab-ci/*.yml
         - ./processmanagement/os/c_cpp/**/Makefile
         - ./processmanagement/os/c_cpp/**/*.mk
         - ./processmanagement/os/c_cpp/**/*.h
         - ./processmanagement/os/c_cpp/**/*.c

debian:
  stage: publish
  parallel:
    matrix:
      - RUNNER_TAG: [debian]
  before_script:
    - |
      ls -lR packages;
  script:
    - |
      . /etc/os-release;
      machine="$(uname -m)";
      ARTIFACTDIR="${PWD}/packages/${ID}/${machine}";
      PACKAGE_EXT="*.rpm"
      ls -lR "${ARTIFACTDIR}";
      #find "${ARTIFACTDIR}" -name "${PACKAGE_EXT}" -printf "[INFO] Package:%f\n" -exec basename {}; pacman -Ql {} \;
  needs: ["build_deb_or_rpm_container"]
  dependencies:
    - build_deb_or_rpm_container
  tags:
    - $RUNNER_TAG
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - changes:
         - .gitlab-ci.yml
         - .gitlab-ci/*.yml
         - ./processmanagement/os/c_cpp/**/Makefile
         - ./processmanagement/os/c_cpp/**/*.mk
         - ./processmanagement/os/c_cpp/**/*.h
         - ./processmanagement/os/c_cpp/**/*.c
freebsd:
  stage: publish
  parallel:
    matrix:
      - RUNNER_TAG: [freebsd14vm]
  before_script:
    - |
      ls -lR packages;
  script:
    - |
      . /etc/os-release;
      machine="$(uname -m)";
      ARTIFACTDIR="${PWD}/packages/${ID}/${machine}";
      PACKAGE_EXT="*.pkg"
      ls -lR "${ARTIFACTDIR}";
      ls -l /
      echo "**** groups"
      groups
      doas ls -l "${NAS_REPO_ROOT_PATH}/${REPO_ROOT_PATH}"
      doas ls -l "${NAS_REPO_ROOT_PATH}/${REPO_ROOT_PATH}/${ID}"
      #find "${ARTIFACTDIR}" -name "${PACKAGE_EXT}" -printf "[INFO] Package:%f\n" -exec basename {}; pacman -Ql {} \;
  needs: ["build_freebsd"]
  dependencies:
    - build_freebsd
  tags:
    - $RUNNER_TAG
  timeout: 10m
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - changes:
         - .gitlab-ci.yml
         - .gitlab-ci/*.yml
         - ./processmanagement/os/c_cpp/**/Makefile
         - ./processmanagement/os/c_cpp/**/*.mk
         - ./processmanagement/os/c_cpp/**/*.h
         - ./processmanagement/os/c_cpp/**/*.c
